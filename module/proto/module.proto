// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

syntax = "proto3";
package proto;
option go_package = "github.com/NubeIO/rubix-os/module/proto";

message InitRequest {
  uint32 add_server = 1;
  string module_name = 2;
}

message Empty {}

message ConfigBody {
  bytes config = 1;
}

message GetWithoutParamRequest {
  string path = 1;
  string args = 3;
}

message GetRequest {
  string path = 1;
  string uuid = 2;
  string args = 3;
}

message PostRequest {
  string path = 1;
  bytes body = 3;
}

message PutRequest {
  string path = 1;
  string uuid = 2;
  bytes body = 3;
}

message PatchRequest {
  string path = 1;
  string uuid = 2;
  bytes body = 3;
}

message DeleteRequest {
  string path = 1;
  string uuid = 2;
}

message Response {
  bytes r = 1;
}

message InfoResponse {
  string Name = 1;
  string Author = 2;
  string Website = 3;
  string License = 4;
  bool HasNetwork = 5;
}

message UrlPrefixResponse {
  string r = 1;
}

service Module {
  rpc ValidateAndSetConfig(ConfigBody) returns (Response);
  rpc Init(InitRequest) returns (Empty);
  rpc Enable(Empty) returns (Empty);
  rpc Disable(Empty) returns (Empty);
  rpc GetInfo(Empty) returns (InfoResponse);
  rpc Get(GetRequest) returns (Response);
  rpc Post(PostRequest) returns (Response);
  rpc Put(PutRequest) returns (Response);
  rpc Patch(PatchRequest) returns (Response);
  rpc Delete(DeleteRequest) returns (Response);
}

service DBHelper {
  rpc GetWithoutParam(GetWithoutParamRequest) returns (Response);
  rpc Get(GetRequest) returns (Response);
  rpc Post(PostRequest) returns (Response);
  rpc Put(PutRequest) returns (Response);
  rpc Patch(PatchRequest) returns (Response);
  rpc Delete(DeleteRequest) returns (Response);
}
