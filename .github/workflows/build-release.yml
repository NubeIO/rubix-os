name: build-release

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'

env:
  APP_NAME: flow-framework
  GHCR_IMAGE: ghcr.io/nubeio/rubix-point
  PLATFORMS: linux/amd64,linux/arm/v7

jobs:

  context:
    runs-on: ubuntu-latest

    outputs:
      shouldBuild: ${{ steps.context.outputs.decision_build }}
      shouldPublish: ${{ steps.context.outputs.decision_publish }}
      isRelease: ${{ steps.context.outputs.isTag }}
      afterRelease: ${{ steps.context.outputs.isAfterMergedReleasePR }}
      sha: ${{ steps.context.outputs.commitId }}
      version: ${{ steps.context.outputs.version }}
      shortCommitId: ${{ steps.context.outputs.shortCommitId }}
      fqn: ${{ env.APP_NAME }}-${{ steps.context.outputs.version }}-${{ steps.context.outputs.shortCommitId }}

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.NUBEIO_CI_GITHUBPROJECT_TOKEN }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          git-user-signingkey: true
          git-commit-gpgsign: true
          git-tag-gpgsign: true
          git-push-gpgsign: false
          gpg-private-key: ${{ secrets.NUBEIO_CI_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.NUBEIO_CI_GPG_PASSPHARSE }}

      - name: Project context
        id: context
        uses: zero88/gh-project-context@v1
        with:
          dry: false
          defaultBranch: master

  build:
    runs-on: ubuntu-latest
    needs: context
    if: needs.context.outputs.shouldBuild == 'true'
    services:
      registry:
        image: zero88/gh-registry:latest
        ports:
          - 5000:5000
        options: >-
          -v /home/runner:/var/lib/registry
          --name registry
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.6'

      - name: Set current date as env variable
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"

      - name: Edit app.go for environment
        env:
          VERSION: ${{ needs.context.outputs.version }}
          COMMIT: ${{ needs.context.outputs.shortCommitId }}
          BUILD_DATE: ${{ steps.date.outputs.date }}
        run: |
          sed -i -e 's,<version>,'"${VERSION}"',' app.go
          sed -i -e 's/<commit>/'"${COMMIT}"'/' app.go
          sed -i -e 's/<build_date>/'"${BUILD_DATE}"'/' app.go

      - name: Build amd64
        run: |
          go mod tidy
          go build -o app-amd64 app.go

          cd ./plugin/nube/system
          go build -buildmode=plugin -o system-amd64.so *.go  && cp system-amd64.so ../../../

          cd ../../../plugin/nube/protocals/edge28
          go build -buildmode=plugin -o edge28-amd64.so *.go  && cp edge28-amd64.so ../../../../

          cd ../../../../plugin/nube/protocals/lorawan
          go build -buildmode=plugin -o lorawan-amd64.so *.go  && cp lorawan-amd64.so ../../../../

          cd ../../../../plugin/nube/protocals/modbus
          go build -buildmode=plugin -o modbus-amd64.so *.go  && cp modbus-amd64.so ../../../../

          cd ../../../../plugin/nube/protocals/lora
          go build -buildmode=plugin -o lora-amd64.so *.go  && cp lora-amd64.so ../../../../

          cd ../../../../plugin/nube/protocals/bacnetserver
          go build -buildmode=plugin -o bacnetserver-amd64.so *.go  && cp bacnetserver-amd64.so ../../../../

          cd ../../../../plugin/nube/protocals/bacnetmaster
          go build -buildmode=plugin -o bacnetmaster-amd64.so *.go  && cp bacnetmaster-amd64.so ../../../../

          cd ../../../../plugin/nube/protocals/rubixio
          go build -buildmode=plugin -o rubixio-amd64.so *.go  && cp rubixio-amd64.so ../../../../

          cd ../../../../plugin/nube/protocals/modbusserver
          go build -buildmode=plugin -o modbusserver-amd64.so *.go  && cp modbusserver-amd64.so ../../../../

          cd ../../../../plugin/nube/database/influx
          go build -buildmode=plugin -o influx-amd64.so *.go  && cp influx-amd64.so ../../../../

          cd ../../../../plugin/nube/database/history
          go build -buildmode=plugin -o history-amd64.so *.go  && cp history-amd64.so ../../../../

          cd ../../../../plugin/nube/database/postgres
          go build -buildmode=plugin -o postgres-amd64.so *.go  && cp postgres-amd64.so ../../../../


      - name: Build armv7
        if: ${{ needs.context.outputs.isRelease == 'true' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -o app-armv7 app.go

          cd ./plugin/nube/system
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o system-armv7.so *.go  && cp system-armv7.so ../../../

          cd ../../../plugin/nube/protocals/edge28
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o edge28-armv7.so *.go  && cp edge28-armv7.so ../../../../

          cd ../../../../plugin/nube/protocals/lorawan
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o lorawan-armv7.so *.go  && cp lorawan-armv7.so ../../../../

          cd ../../../../plugin/nube/protocals/modbus
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o modbus-armv7.so *.go  && cp modbus-armv7.so ../../../../

          cd ../../../../plugin/nube/protocals/lora
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o lora-armv7.so *.go  && cp lora-armv7.so ../../../../

          cd ../../../../plugin/nube/protocals/bacnetserver
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o bacnetserver-armv7.so *.go  && cp bacnetserver-armv7.so ../../../../

          cd ../../../../plugin/nube/protocals/bacnetmaster
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o bacnetmaster-armv7.so *.go  && cp bacnetmaster-armv7.so ../../../../

          cd ../../../../plugin/nube/protocals/rubixio
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o rubixio-armv7.so *.go  && cp rubixio-armv7.so ../../../../

          cd ../../../../plugin/nube/protocals/modbusserver
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o modbusserver-armv7.so *.go  && cp modbusserver-armv7.so ../../../../

          cd ../../../../plugin/nube/database/influx
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o influx-armv7.so *.go  && cp influx-armv7.so ../../../../

          cd ../../../../plugin/nube/database/history
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o history-armv7.so *.go  && cp history-armv7.so ../../../../

          cd ../../../../plugin/nube/database/postgres
                    env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc  CXX=arm-linux-gnueabihf-g++ go build -buildmode=plugin -o postgres-armv7.so *.go  && cp postgres-armv7.so ../../../../

      - name: Zip artifacts
        if: ${{ needs.context.outputs.isRelease == 'true' }}
        run: |
          mkdir -p /tmp/zip
          artifact=${{ needs.context.outputs.fqn }}.armv7
          zip -r /tmp/zip/$artifact.zip ./app-armv7
          artifact=${{ needs.context.outputs.fqn }}.amd64
          zip -r /tmp/zip/$artifact.zip ./app-amd64

          artifact=system-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./system-amd64.so
          artifact=system-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./system-armv7.so

          artifact=edge28-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./edge28-amd64.so
          artifact=edge28-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./edge28-armv7.so

          artifact=lorawan-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./lorawan-amd64.so
          artifact=lorawan-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./lorawan-armv7.so

          artifact=modbus-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./modbus-amd64.so
          artifact=modbus-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./modbus-armv7.so

          artifact=lora-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./lora-amd64.so
          artifact=lora-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./lora-armv7.so

          artifact=bacnetserver-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./bacnetserver-amd64.so
          artifact=bacnetserver-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./bacnetserver-armv7.so

          artifact=bacnetmaster-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./bacnetmaster-amd64.so
          artifact=bacnetmaster-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./bacnetmaster-armv7.so

          artifact=rubixio-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./rubixio-amd64.so
          artifact=rubixio-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./rubixio-armv7.so

          artifact=modbusserver-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./rubixio-amd64.so
          artifact=modbusserver-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./modbusserver-armv7.so

          artifact=influx-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./influx-amd64.so
          artifact=influx-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./influx-armv7.so

          artifact=history-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./history-amd64.so
          artifact=history-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./history-armv7.so

          artifact=postgres-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.amd64
          zip -r /tmp/zip/$artifact.zip ./postgres-amd64.so
          artifact=postgres-${{ needs.context.outputs.version }}-${{ needs.context.outputs.shortCommitId }}.armv7
          zip -r /tmp/zip/$artifact.zip ./postgres-armv7.so


      - name: Create Release
        if: ${{ needs.context.outputs.isRelease == 'true' }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.context.outputs.version }}
          name: Release v${{ needs.context.outputs.version }}
          draft: false
          prerelease: false
          files: |
            /tmp/zip/*.amd64.zip
            /tmp/zip/*.armv7.zip
            
